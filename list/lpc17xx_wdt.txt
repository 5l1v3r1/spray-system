; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\lpc17xx_wdt.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\lpc17xx_wdt.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\cstartup -I.\drivers\uart -I.\app\cfg -I.\iap -I.\drivers -I.\usb -I.\drivers\adc -I.\drivers\gpio -I.\drivers -I.\RTE\_lpc17xx_can_loader_debug -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DLPC175x_6x -D__DEBUG_UART2_PRINTF__ -D__UART0__ -D__UART1__ -D__UART2__ -D__UART3__ -D__UART2_ENABLE__ -D__UART3_ENABLE__ -D__UART0_ENABLE__ -D__UART1_ENABLE__ --omf_browse=.\output\lpc17xx_wdt.crf drivers\wdt\lpc17xx_wdt.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WDT_Init PROC
;;;4      
;;;5      void WDT_Init( void )
000000  f04f4080          MOV      r0,#0x40000000
;;;6      {
;;;7      	//Set clock source
;;;8      	LPC_WDT->WDCLKSEL &= ~( 3 << 0 );
000004  6900              LDR      r0,[r0,#0x10]
000006  f0200003          BIC      r0,r0,#3
00000a  f04f4180          MOV      r1,#0x40000000
00000e  6108              STR      r0,[r1,#0x10]
;;;9      	LPC_WDT->WDCLKSEL |= 0x01;
000010  4608              MOV      r0,r1
000012  6900              LDR      r0,[r0,#0x10]
000014  f0400001          ORR      r0,r0,#1
000018  6108              STR      r0,[r1,#0x10]
;;;10     	//Set WDT mode
;;;11     	LPC_WDT->WDMOD |= 0x02;
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]
00001e  f0400002          ORR      r0,r0,#2
000022  7008              STRB     r0,[r1,#0]
;;;12     }
000024  4770              BX       lr
;;;13     
                          ENDP

                  WDT_Feed PROC
;;;27     
;;;28     void WDT_Feed( void )
000026  b510              PUSH     {r4,lr}
;;;29     {
;;;30     	CPU_SR_ALLOC();
000028  2400              MOVS     r4,#0
;;;31     	if( wdt_locked ) return;
00002a  481f              LDR      r0,|L1.168|
00002c  7800              LDRB     r0,[r0,#0]  ; wdt_locked
00002e  b100              CBZ      r0,|L1.50|
                  |L1.48|
;;;32     	CPU_CRITICAL_ENTER(); 
;;;33     	LPC_WDT->WDFEED = 0xAA;
;;;34     	LPC_WDT->WDFEED = 0x55;
;;;35     	CPU_CRITICAL_EXIT();
;;;36     }
000030  bd10              POP      {r4,pc}
                  |L1.50|
000032  f7fffffe          BL       CPU_SR_Save
000036  4604              MOV      r4,r0                 ;32
000038  20aa              MOVS     r0,#0xaa              ;33
00003a  0741              LSLS     r1,r0,#29             ;33
00003c  7208              STRB     r0,[r1,#8]            ;33
00003e  2055              MOVS     r0,#0x55              ;34
000040  7208              STRB     r0,[r1,#8]            ;34
000042  4620              MOV      r0,r4                 ;35
000044  f7fffffe          BL       CPU_SR_Restore
000048  bf00              NOP      
00004a  e7f1              B        |L1.48|
;;;37     
                          ENDP

                  WDT_Start PROC
;;;13     
;;;14     void WDT_Start( uint32_t ms )
00004c  b510              PUSH     {r4,lr}
;;;15     {
00004e  4604              MOV      r4,r0
;;;16     	LPC_WDT->WDTC = ms * 6250;
000050  f641006a          MOV      r0,#0x186a
000054  4360              MULS     r0,r4,r0
000056  f04f4180          MOV      r1,#0x40000000
00005a  6048              STR      r0,[r1,#4]
;;;17     	//enable watchdog
;;;18     	LPC_WDT->WDMOD |= 0x01;
00005c  4608              MOV      r0,r1
00005e  7800              LDRB     r0,[r0,#0]
000060  f0400001          ORR      r0,r0,#1
000064  7008              STRB     r0,[r1,#0]
;;;19     	WDT_Feed();
000066  f7fffffe          BL       WDT_Feed
;;;20     }
00006a  bd10              POP      {r4,pc}
;;;21     
                          ENDP

                  WDT_UpdateTimeOut PROC
;;;22     void WDT_UpdateTimeOut ( uint32_t ms )
00006c  b510              PUSH     {r4,lr}
;;;23     {
00006e  4604              MOV      r4,r0
;;;24     	LPC_WDT->WDTC = ms * 6250;
000070  f641006a          MOV      r0,#0x186a
000074  4360              MULS     r0,r4,r0
000076  f04f4180          MOV      r1,#0x40000000
00007a  6048              STR      r0,[r1,#4]
;;;25     	WDT_Feed();
00007c  f7fffffe          BL       WDT_Feed
;;;26     }
000080  bd10              POP      {r4,pc}
;;;27     
                          ENDP

                  WDT_GetCurrentCount PROC
;;;37     
;;;38     uint32_t WDT_GetCurrentCount( void )
000082  f04f4080          MOV      r0,#0x40000000
;;;39     {
;;;40     	return LPC_WDT->WDTV;
000086  68c0              LDR      r0,[r0,#0xc]
;;;41     }
000088  4770              BX       lr
;;;42     
                          ENDP

                  WDT_ResetCheck PROC
;;;43     uint8_t WDT_ResetCheck( void )
00008a  f04f4080          MOV      r0,#0x40000000
;;;44     {
;;;45     	return ( LPC_WDT->WDMOD & 0x04 );
00008e  7800              LDRB     r0,[r0,#0]
000090  f0000004          AND      r0,r0,#4
;;;46     }
000094  4770              BX       lr
;;;47     
                          ENDP

                  WDT_Lock PROC
;;;48     void WDT_Lock( void )
000096  2001              MOVS     r0,#1
;;;49     {
;;;50     	wdt_locked = 1;
000098  4903              LDR      r1,|L1.168|
00009a  7008              STRB     r0,[r1,#0]
;;;51     }
00009c  4770              BX       lr
;;;52     
                          ENDP

                  WDT_UnLock PROC
;;;53     void WDT_UnLock( void )
00009e  2000              MOVS     r0,#0
;;;54     {
;;;55     	wdt_locked = 0;
0000a0  4901              LDR      r1,|L1.168|
0000a2  7008              STRB     r0,[r1,#0]
;;;56     }
0000a4  4770              BX       lr
;;;57     
                          ENDP

0000a6  0000              DCW      0x0000
                  |L1.168|
                          DCD      wdt_locked

                          AREA ||.data||, DATA, ALIGN=0

                  wdt_locked
000000  00                DCB      0x00
