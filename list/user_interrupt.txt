; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\user_interrupt.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\user_interrupt.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\cstartup -I.\drivers\uart -I.\app\cfg -I.\iap -I.\drivers -I.\usb -I.\drivers\adc -I.\drivers\gpio -I.\drivers -I.\RTE\_lpc17xx_can_loader_debug -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DLPC175x_6x -D__DEBUG_UART2_PRINTF__ -D__UART0__ -D__UART1__ -D__UART2__ -D__UART3__ -D__UART2_ENABLE__ -D__UART3_ENABLE__ -D__UART0_ENABLE__ -D__UART1_ENABLE__ --omf_browse=.\output\user_interrupt.crf drivers\user_interrupt.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Interrupt_Init PROC
;;;10     
;;;11     void Interrupt_Init( void )
000000  b510              PUSH     {r4,lr}
;;;12     {
;;;13     	//设置为输入状态
;;;14     	LPC_GPIO2->FIODIR &= (~(1<<7))|(~(1<<6));;
000002  4864              LDR      r0,|L1.404|
000004  6c00              LDR      r0,[r0,#0x40]
000006  4963              LDR      r1,|L1.404|
000008  6408              STR      r0,[r1,#0x40]
;;;15     	LPC_GPIOINT->IO2IntEnR |=BIT7_MASK | BIT6_MASK;	//设置为输入状态
00000a  4863              LDR      r0,|L1.408|
00000c  6800              LDR      r0,[r0,#0]
00000e  f04000c0          ORR      r0,r0,#0xc0
000012  4961              LDR      r1,|L1.408|
000014  39b0              SUBS     r1,r1,#0xb0
000016  f8c100b0          STR      r0,[r1,#0xb0]
;;;16     //LPC_GPIOINT->IO2IntEnF |=BIT7_MASK ;
;;;17     	LPC_GPIOINT->IO2IntClr|=BIT7_MASK|BIT6_MASK ;
00001a  4608              MOV      r0,r1
00001c  f8d000ac          LDR      r0,[r0,#0xac]
000020  f04000c0          ORR      r0,r0,#0xc0
000024  f8c100ac          STR      r0,[r1,#0xac]
;;;18     	NVIC_SetPriority( EINT3_IRQn , 0 );
000028  2015              MOVS     r0,#0x15
00002a  2100              MOVS     r1,#0
00002c  2800              CMP      r0,#0
00002e  da07              BGE      |L1.64|
000030  06ca              LSLS     r2,r1,#27
000032  0e14              LSRS     r4,r2,#24
000034  4a59              LDR      r2,|L1.412|
000036  f000030f          AND      r3,r0,#0xf
00003a  1f1b              SUBS     r3,r3,#4
00003c  54d4              STRB     r4,[r2,r3]
00003e  e003              B        |L1.72|
                  |L1.64|
000040  06ca              LSLS     r2,r1,#27
000042  0e13              LSRS     r3,r2,#24
000044  4a56              LDR      r2,|L1.416|
000046  5413              STRB     r3,[r2,r0]
                  |L1.72|
000048  bf00              NOP      
;;;19     	NVIC_EnableIRQ(EINT3_IRQn);
00004a  2015              MOVS     r0,#0x15
00004c  2101              MOVS     r1,#1
00004e  4081              LSLS     r1,r1,r0
000050  0942              LSRS     r2,r0,#5
000052  0092              LSLS     r2,r2,#2
000054  f10222e0          ADD      r2,r2,#0xe000e000
000058  f8c21100          STR      r1,[r2,#0x100]
00005c  bf00              NOP      
;;;20     }
00005e  bd10              POP      {r4,pc}
;;;21     
                          ENDP

                  flow_cali_enble PROC
;;;29     
;;;30     void flow_cali_enble(void)
000060  2001              MOVS     r0,#1
;;;31     {
;;;32     	flow_cali_flag = START_FLOW_CALI;
000062  4950              LDR      r1,|L1.420|
000064  7008              STRB     r0,[r1,#0]
;;;33     }
000066  4770              BX       lr
;;;34     
                          ENDP

                  flow_cali_clear PROC
;;;35     void flow_cali_clear(void)
000068  2002              MOVS     r0,#2
;;;36     {
;;;37       flow_cali_flag = CLEAR_FLOW_CALI_PARA;
00006a  494e              LDR      r1,|L1.420|
00006c  7008              STRB     r0,[r1,#0]
;;;38     }
00006e  4770              BX       lr
;;;39     
                          ENDP

                  get_cali_flow_pulses_total PROC
;;;40     
;;;41     uint32_t get_cali_flow_pulses_total(void)
000070  484d              LDR      r0,|L1.424|
;;;42     {
;;;43     	if(idx_7_total > idx_6_total)
000072  6800              LDR      r0,[r0,#0]  ; idx_7_total
000074  494d              LDR      r1,|L1.428|
000076  6809              LDR      r1,[r1,#0]  ; idx_6_total
000078  4288              CMP      r0,r1
00007a  d904              BLS      |L1.134|
;;;44     		flow_sensor_pulses_total = idx_7_total;
00007c  484a              LDR      r0,|L1.424|
00007e  6800              LDR      r0,[r0,#0]  ; idx_7_total
000080  494b              LDR      r1,|L1.432|
000082  6008              STR      r0,[r1,#0]  ; flow_sensor_pulses_total
000084  e003              B        |L1.142|
                  |L1.134|
;;;45     	else
;;;46     		flow_sensor_pulses_total = idx_6_total;
000086  4849              LDR      r0,|L1.428|
000088  6800              LDR      r0,[r0,#0]  ; idx_6_total
00008a  4949              LDR      r1,|L1.432|
00008c  6008              STR      r0,[r1,#0]  ; flow_sensor_pulses_total
                  |L1.142|
;;;47     	
;;;48     	return flow_sensor_pulses_total;
00008e  4848              LDR      r0,|L1.432|
000090  6800              LDR      r0,[r0,#0]  ; flow_sensor_pulses_total
;;;49     }
000092  4770              BX       lr
;;;50     
                          ENDP

                  get_cali_flow_freq PROC
;;;51     
;;;52     uint16_t get_cali_flow_freq(void)
000094  4847              LDR      r0,|L1.436|
;;;53     {
;;;54     	if(idx_7_freq > idx_6_freq)
000096  8800              LDRH     r0,[r0,#0]  ; idx_7_freq
000098  4947              LDR      r1,|L1.440|
00009a  8809              LDRH     r1,[r1,#0]  ; idx_6_freq
00009c  4288              CMP      r0,r1
00009e  dd04              BLE      |L1.170|
;;;55     	  flow_sensor_value =	idx_7_freq;
0000a0  4844              LDR      r0,|L1.436|
0000a2  8800              LDRH     r0,[r0,#0]  ; idx_7_freq
0000a4  4945              LDR      r1,|L1.444|
0000a6  8008              STRH     r0,[r1,#0]
0000a8  e003              B        |L1.178|
                  |L1.170|
;;;56     	else
;;;57     		flow_sensor_value =	idx_6_freq;
0000aa  4843              LDR      r0,|L1.440|
0000ac  8800              LDRH     r0,[r0,#0]  ; idx_6_freq
0000ae  4943              LDR      r1,|L1.444|
0000b0  8008              STRH     r0,[r1,#0]
                  |L1.178|
;;;58     	
;;;59     	return flow_sensor_value;
0000b2  4842              LDR      r0,|L1.444|
0000b4  8800              LDRH     r0,[r0,#0]  ; flow_sensor_value
;;;60     }
0000b6  4770              BX       lr
;;;61     
                          ENDP

                  get_cail_flow_time PROC
;;;62     uint32_t get_cail_flow_time(void)
0000b8  4841              LDR      r0,|L1.448|
;;;63     {
;;;64     	if(idx_7_tick > idx_6_tick)
0000ba  6800              LDR      r0,[r0,#0]  ; idx_7_tick
0000bc  4941              LDR      r1,|L1.452|
0000be  6809              LDR      r1,[r1,#0]  ; idx_6_tick
0000c0  4288              CMP      r0,r1
0000c2  d904              BLS      |L1.206|
;;;65     	  flow_sensor_tick =	idx_7_tick;
0000c4  483e              LDR      r0,|L1.448|
0000c6  6800              LDR      r0,[r0,#0]  ; idx_7_tick
0000c8  493f              LDR      r1,|L1.456|
0000ca  6008              STR      r0,[r1,#0]  ; flow_sensor_tick
0000cc  e003              B        |L1.214|
                  |L1.206|
;;;66     	else
;;;67     		flow_sensor_tick =	idx_6_tick;
0000ce  483d              LDR      r0,|L1.452|
0000d0  6800              LDR      r0,[r0,#0]  ; idx_6_tick
0000d2  493d              LDR      r1,|L1.456|
0000d4  6008              STR      r0,[r1,#0]  ; flow_sensor_tick
                  |L1.214|
;;;68     	
;;;69      return flow_sensor_tick;
0000d6  483c              LDR      r0,|L1.456|
0000d8  6800              LDR      r0,[r0,#0]  ; flow_sensor_tick
;;;70     }
0000da  4770              BX       lr
;;;71     
                          ENDP

                  EINT3_IRQHandler PROC
;;;72     
;;;73     void EINT3_IRQHandler(void)
0000dc  b500              PUSH     {lr}
;;;74     {
;;;75     	get_cali_flow_pulses_total();
0000de  f7fffffe          BL       get_cali_flow_pulses_total
;;;76     	get_cail_flow_time();
0000e2  f7fffffe          BL       get_cail_flow_time
;;;77     	if( LPC_GPIOINT->IO2IntStatR & BIT7_MASK )
0000e6  482c              LDR      r0,|L1.408|
0000e8  380c              SUBS     r0,r0,#0xc
0000ea  6800              LDR      r0,[r0,#0]
0000ec  f0000080          AND      r0,r0,#0x80
0000f0  b320              CBZ      r0,|L1.316|
;;;78     	{
;;;79     		idx_7++;
0000f2  4836              LDR      r0,|L1.460|
0000f4  6800              LDR      r0,[r0,#0]  ; idx_7
0000f6  1c40              ADDS     r0,r0,#1
0000f8  4934              LDR      r1,|L1.460|
0000fa  6008              STR      r0,[r1,#0]  ; idx_7
;;;80     		if(flow_cali_flag == START_FLOW_CALI)
0000fc  4829              LDR      r0,|L1.420|
0000fe  7800              LDRB     r0,[r0,#0]  ; flow_cali_flag
000100  2801              CMP      r0,#1
000102  d105              BNE      |L1.272|
;;;81     		{
;;;82     		    idx_7_total++;
000104  4828              LDR      r0,|L1.424|
000106  6800              LDR      r0,[r0,#0]  ; idx_7_total
000108  1c40              ADDS     r0,r0,#1
00010a  4927              LDR      r1,|L1.424|
00010c  6008              STR      r0,[r1,#0]  ; idx_7_total
00010e  e005              B        |L1.284|
                  |L1.272|
;;;83     		}
;;;84     		else if(flow_cali_flag == CANCEL_FLOW_CALI)
000110  4824              LDR      r0,|L1.420|
000112  7800              LDRB     r0,[r0,#0]  ; flow_cali_flag
000114  b910              CBNZ     r0,|L1.284|
;;;85     		{
;;;86     		  idx_7_total = 0;
000116  2000              MOVS     r0,#0
000118  4923              LDR      r1,|L1.424|
00011a  6008              STR      r0,[r1,#0]  ; idx_7_total
                  |L1.284|
;;;87     		}
;;;88     		if(idx_7_total == 1) //第一次时开始计时
00011c  4822              LDR      r0,|L1.424|
00011e  6800              LDR      r0,[r0,#0]  ; idx_7_total
000120  2801              CMP      r0,#1
000122  d102              BNE      |L1.298|
;;;89     				idx_7_tick = 0;
000124  2000              MOVS     r0,#0
000126  4926              LDR      r1,|L1.448|
000128  6008              STR      r0,[r1,#0]  ; idx_7_tick
                  |L1.298|
;;;90     
;;;91     		LPC_GPIOINT->IO2IntClr |= BIT7_MASK ;
00012a  481b              LDR      r0,|L1.408|
00012c  1f00              SUBS     r0,r0,#4
00012e  6800              LDR      r0,[r0,#0]
000130  f0400080          ORR      r0,r0,#0x80
000134  4918              LDR      r1,|L1.408|
000136  39b0              SUBS     r1,r1,#0xb0
000138  f8c100ac          STR      r0,[r1,#0xac]
                  |L1.316|
;;;92     	}
;;;93     	
;;;94     	if( LPC_GPIOINT->IO2IntStatR & BIT6_MASK )
00013c  4816              LDR      r0,|L1.408|
00013e  380c              SUBS     r0,r0,#0xc
000140  6800              LDR      r0,[r0,#0]
000142  f0000040          AND      r0,r0,#0x40
000146  b320              CBZ      r0,|L1.402|
;;;95     	{
;;;96     		idx_6++;
000148  4821              LDR      r0,|L1.464|
00014a  6800              LDR      r0,[r0,#0]  ; idx_6
00014c  1c40              ADDS     r0,r0,#1
00014e  4920              LDR      r1,|L1.464|
000150  6008              STR      r0,[r1,#0]  ; idx_6
;;;97     		if(flow_cali_flag == START_FLOW_CALI)
000152  4814              LDR      r0,|L1.420|
000154  7800              LDRB     r0,[r0,#0]  ; flow_cali_flag
000156  2801              CMP      r0,#1
000158  d10c              BNE      |L1.372|
;;;98     		{
;;;99     		    idx_6_total++;
00015a  4814              LDR      r0,|L1.428|
00015c  6800              LDR      r0,[r0,#0]  ; idx_6_total
00015e  1c40              ADDS     r0,r0,#1
000160  4912              LDR      r1,|L1.428|
000162  6008              STR      r0,[r1,#0]  ; idx_6_total
;;;100    			  if(idx_6_total == 1) //第一次时开始计时
000164  4608              MOV      r0,r1
000166  6800              LDR      r0,[r0,#0]  ; idx_6_total
000168  2801              CMP      r0,#1
00016a  d109              BNE      |L1.384|
;;;101    					idx_6_tick = 0;
00016c  2000              MOVS     r0,#0
00016e  4915              LDR      r1,|L1.452|
000170  6008              STR      r0,[r1,#0]  ; idx_6_tick
000172  e005              B        |L1.384|
                  |L1.372|
;;;102    		}
;;;103    		else if(flow_cali_flag == CANCEL_FLOW_CALI)
000174  480b              LDR      r0,|L1.420|
000176  7800              LDRB     r0,[r0,#0]  ; flow_cali_flag
000178  b910              CBNZ     r0,|L1.384|
;;;104    		{
;;;105    		  idx_6_total = 0;
00017a  2000              MOVS     r0,#0
00017c  490b              LDR      r1,|L1.428|
00017e  6008              STR      r0,[r1,#0]  ; idx_6_total
                  |L1.384|
;;;106    		}
;;;107    		LPC_GPIOINT->IO2IntClr |= BIT6_MASK ;
000180  4805              LDR      r0,|L1.408|
000182  1f00              SUBS     r0,r0,#4
000184  6800              LDR      r0,[r0,#0]
000186  f0400040          ORR      r0,r0,#0x40
00018a  4903              LDR      r1,|L1.408|
00018c  39b0              SUBS     r1,r1,#0xb0
00018e  f8c100ac          STR      r0,[r1,#0xac]
                  |L1.402|
;;;108    	}
;;;109    }
000192  bd00              POP      {pc}
;;;110    
                          ENDP

                  |L1.404|
                          DCD      0x2009c000
                  |L1.408|
                          DCD      0x400280b0
                  |L1.412|
                          DCD      0xe000ed18
                  |L1.416|
                          DCD      0xe000e400
                  |L1.420|
                          DCD      flow_cali_flag
                  |L1.424|
                          DCD      idx_7_total
                  |L1.428|
                          DCD      idx_6_total
                  |L1.432|
                          DCD      flow_sensor_pulses_total
                  |L1.436|
                          DCD      idx_7_freq
                  |L1.440|
                          DCD      idx_6_freq
                  |L1.444|
                          DCD      flow_sensor_value
                  |L1.448|
                          DCD      idx_7_tick
                  |L1.452|
                          DCD      idx_6_tick
                  |L1.456|
                          DCD      flow_sensor_tick
                  |L1.460|
                          DCD      idx_7
                  |L1.464|
                          DCD      idx_6

                          AREA ||.data||, DATA, ALIGN=2

                  idx_7
                          DCD      0x00000000
                  idx_6
                          DCD      0x00000000
                  idx_6_total
                          DCD      0x00000000
                  idx_7_total
                          DCD      0x00000000
                  flow_sensor_pulses_total
                          DCD      0x00000000
                  idx_7_freq
000014  0000              DCB      0x00,0x00
                  idx_6_freq
000016  0000              DCB      0x00,0x00
                  flow_sensor_value
000018  0000              DCB      0x00,0x00
                  flow_cali_flag
00001a  0000              DCB      0x00,0x00
                  flow_sensor_tick
                          DCD      0x00000000
