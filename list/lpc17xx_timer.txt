; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\lpc17xx_timer.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\lpc17xx_timer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\cstartup -I.\drivers\uart -I.\app\cfg -I.\iap -I.\drivers -I.\usb -I.\drivers\adc -I.\drivers\gpio -I.\drivers -I.\RTE\_lpc17xx_can_loader_debug -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DLPC175x_6x -D__DEBUG_UART2_PRINTF__ -D__UART0__ -D__UART1__ -D__UART2__ -D__UART3__ -D__UART2_ENABLE__ -D__UART3_ENABLE__ -D__UART0_ENABLE__ -D__UART1_ENABLE__ --omf_browse=.\output\lpc17xx_timer.crf drivers\timer\lpc17xx_timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIMER0_IRQHandler PROC
;;;7      uint32_t idx_7_tick,idx_6_tick;
;;;8      void TIMER0_IRQHandler( void )
000000  f04f2140          MOV      r1,#0x40004000
;;;9      {
;;;10     	uint32_t ir_reg = LPC_TIM0->IR;
000004  6808              LDR      r0,[r1,#0]
;;;11     	LPC_TIM0->IR = ir_reg;
000006  6008              STR      r0,[r1,#0]
;;;12     	if(g_current_tick % 1000 == 0)
000008  4974              LDR      r1,|L1.476|
00000a  6809              LDR      r1,[r1,#0]  ; g_current_tick
00000c  f44f727a          MOV      r2,#0x3e8
000010  fbb1f3f2          UDIV     r3,r1,r2
000014  fb021113          MLS      r1,r2,r3,r1
000018  b961              CBNZ     r1,|L1.52|
;;;13     	{
;;;14     		idx_7_freq = idx_7;
00001a  4971              LDR      r1,|L1.480|
00001c  8809              LDRH     r1,[r1,#0]  ; idx_7
00001e  4a71              LDR      r2,|L1.484|
000020  8011              STRH     r1,[r2,#0]
;;;15     		idx_6_freq = idx_6;
000022  4971              LDR      r1,|L1.488|
000024  8809              LDRH     r1,[r1,#0]  ; idx_6
000026  4a71              LDR      r2,|L1.492|
000028  8011              STRH     r1,[r2,#0]
;;;16     		idx_6 = 0;
00002a  2100              MOVS     r1,#0
00002c  4a6e              LDR      r2,|L1.488|
00002e  6011              STR      r1,[r2,#0]  ; idx_6
;;;17     		idx_7 = 0;
000030  4a6b              LDR      r2,|L1.480|
000032  6011              STR      r1,[r2,#0]  ; idx_7
                  |L1.52|
;;;18     	}
;;;19     	
;;;20     	if(FOC_1_STATUS.enable_flag == STOP_SPARY&&
000034  496e              LDR      r1,|L1.496|
000036  7809              LDRB     r1,[r1,#0]  ; FOC_1_STATUS
000038  f0010101          AND      r1,r1,#1
00003c  b921              CBNZ     r1,|L1.72|
;;;21       	 FOC_2_STATUS.enable_flag == STOP_SPARY)
00003e  496d              LDR      r1,|L1.500|
000040  7809              LDRB     r1,[r1,#0]  ; FOC_2_STATUS
000042  f0010101          AND      r1,r1,#1
000046  b1c9              CBZ      r1,|L1.124|
                  |L1.72|
;;;22     	{
;;;23     
;;;24       }
;;;25     	else if(FOC_1_STATUS.flow_speed == 0
000048  4969              LDR      r1,|L1.496|
00004a  7809              LDRB     r1,[r1,#0]  ; FOC_1_STATUS
00004c  0849              LSRS     r1,r1,#1
00004e  b919              CBNZ     r1,|L1.88|
;;;26     		   && FOC_2_STATUS.flow_speed == 0)
000050  4968              LDR      r1,|L1.500|
000052  7809              LDRB     r1,[r1,#0]  ; FOC_2_STATUS
000054  0849              LSRS     r1,r1,#1
000056  b189              CBZ      r1,|L1.124|
                  |L1.88|
;;;27     	{
;;;28     	
;;;29     	}	
;;;30     	else
;;;31     	{
;;;32     		if(idx_7_freq > 5) // 有流量时在计数 
000058  4962              LDR      r1,|L1.484|
00005a  8809              LDRH     r1,[r1,#0]  ; idx_7_freq
00005c  2905              CMP      r1,#5
00005e  dd04              BLE      |L1.106|
;;;33     			idx_7_tick++;
000060  4965              LDR      r1,|L1.504|
000062  6809              LDR      r1,[r1,#0]  ; idx_7_tick
000064  1c49              ADDS     r1,r1,#1
000066  4a64              LDR      r2,|L1.504|
000068  6011              STR      r1,[r2,#0]  ; idx_7_tick
                  |L1.106|
;;;34     		
;;;35     		if(idx_6_freq > 5) // 有流量时在计数 
00006a  4960              LDR      r1,|L1.492|
00006c  8809              LDRH     r1,[r1,#0]  ; idx_6_freq
00006e  2905              CMP      r1,#5
000070  dd04              BLE      |L1.124|
;;;36     			idx_6_tick++;
000072  4962              LDR      r1,|L1.508|
000074  6809              LDR      r1,[r1,#0]  ; idx_6_tick
000076  1c49              ADDS     r1,r1,#1
000078  4a60              LDR      r2,|L1.508|
00007a  6011              STR      r1,[r2,#0]  ; idx_6_tick
                  |L1.124|
;;;37     	}
;;;38     	timer0_1ms_timeout_flag = 1;
00007c  2101              MOVS     r1,#1
00007e  4a60              LDR      r2,|L1.512|
000080  7011              STRB     r1,[r2,#0]
;;;39     	g_current_tick ++ ;
000082  4956              LDR      r1,|L1.476|
000084  6809              LDR      r1,[r1,#0]  ; g_current_tick
000086  1c49              ADDS     r1,r1,#1
000088  4a54              LDR      r2,|L1.476|
00008a  6011              STR      r1,[r2,#0]  ; g_current_tick
;;;40     }
00008c  4770              BX       lr
;;;41     
                          ENDP

                  TIMER0_Init PROC
;;;42     void TIMER0_Init( void )
00008e  b510              PUSH     {r4,lr}
;;;43     {
;;;44     	LPC_SC->PCONP |= ( 1 << 1 );
000090  485c              LDR      r0,|L1.516|
000092  6800              LDR      r0,[r0,#0]
000094  f0400002          ORR      r0,r0,#2
000098  495a              LDR      r1,|L1.516|
00009a  39c4              SUBS     r1,r1,#0xc4
00009c  f8c100c4          STR      r0,[r1,#0xc4]
;;;45     	
;;;46     	LPC_TIM0->TCR = 0x02;
0000a0  2002              MOVS     r0,#2
0000a2  f04f2140          MOV      r1,#0x40004000
0000a6  6048              STR      r0,[r1,#4]
;;;47     	LPC_TIM0->IR   = 0xF;
0000a8  200f              MOVS     r0,#0xf
0000aa  6008              STR      r0,[r1,#0]
;;;48     	LPC_TIM0->CTCR = 0;
0000ac  2000              MOVS     r0,#0
0000ae  6708              STR      r0,[r1,#0x70]
;;;49     	LPC_TIM0->PR   = 24;
0000b0  2018              MOVS     r0,#0x18
0000b2  60c8              STR      r0,[r1,#0xc]
;;;50     	LPC_TIM0->MR0	 = 1000; 	//1ms
0000b4  f44f707a          MOV      r0,#0x3e8
0000b8  6188              STR      r0,[r1,#0x18]
;;;51     	LPC_TIM0->MCR  = 0x3;
0000ba  2003              MOVS     r0,#3
0000bc  6148              STR      r0,[r1,#0x14]
;;;52     	NVIC_EnableIRQ( TIMER0_IRQn );
0000be  2001              MOVS     r0,#1
0000c0  f7fffffe          BL       NVIC_EnableIRQ
;;;53     }
0000c4  bd10              POP      {r4,pc}
;;;54     
                          ENDP

                  TIMER0_Start PROC
;;;55     void TIMER0_Start( void )
0000c6  2001              MOVS     r0,#1
;;;56     {
;;;57     	LPC_TIM0->TCR = 0x01;
0000c8  f04f2140          MOV      r1,#0x40004000
0000cc  6048              STR      r0,[r1,#4]
;;;58     }
0000ce  4770              BX       lr
;;;59     
                          ENDP

                  TIMER0_Stop PROC
;;;60     void TIMER0_Stop( void )
0000d0  f04f2040          MOV      r0,#0x40004000
;;;61     {
;;;62     	LPC_TIM0->TCR &= ~0x01;
0000d4  6840              LDR      r0,[r0,#4]
0000d6  f0200001          BIC      r0,r0,#1
0000da  f04f2140          MOV      r1,#0x40004000
0000de  6048              STR      r0,[r1,#4]
;;;63     }
0000e0  4770              BX       lr
;;;64     
                          ENDP

                  TIMER0_Reset PROC
;;;65     void TIMER0_Reset( void )
0000e2  f04f2040          MOV      r0,#0x40004000
;;;66     {
;;;67     	LPC_TIM0->TCR |= 0x02;
0000e6  6840              LDR      r0,[r0,#4]
0000e8  f0400002          ORR      r0,r0,#2
0000ec  f04f2140          MOV      r1,#0x40004000
0000f0  6048              STR      r0,[r1,#4]
;;;68     }
0000f2  4770              BX       lr
;;;69     
                          ENDP

                  TIMER0_1Ms_Timeout PROC
;;;70     uint8_t TIMER0_1Ms_Timeout( void )
0000f4  4842              LDR      r0,|L1.512|
;;;71     {
;;;72     	if( timer0_1ms_timeout_flag ) {
0000f6  7800              LDRB     r0,[r0,#0]  ; timer0_1ms_timeout_flag
0000f8  b120              CBZ      r0,|L1.260|
;;;73     		timer0_1ms_timeout_flag = 0;
0000fa  2000              MOVS     r0,#0
0000fc  4940              LDR      r1,|L1.512|
0000fe  7008              STRB     r0,[r1,#0]
;;;74     		return 1;
000100  2001              MOVS     r0,#1
                  |L1.258|
;;;75     	} else {
;;;76     		return 0;
;;;77     	}
;;;78     }
000102  4770              BX       lr
                  |L1.260|
000104  2000              MOVS     r0,#0                 ;76
000106  e7fc              B        |L1.258|
;;;79     
                          ENDP

                  TIMER1_Init PROC
;;;80     void TIMER1_Init( void )
000108  b510              PUSH     {r4,lr}
;;;81     {
;;;82     	LPC_SC->PCONP |= ( 1 << 2 );
00010a  483e              LDR      r0,|L1.516|
00010c  6800              LDR      r0,[r0,#0]
00010e  f0400004          ORR      r0,r0,#4
000112  493c              LDR      r1,|L1.516|
000114  39c4              SUBS     r1,r1,#0xc4
000116  f8c100c4          STR      r0,[r1,#0xc4]
;;;83     	
;;;84     	LPC_TIM1->TCR = 0x02;
00011a  2002              MOVS     r0,#2
00011c  493a              LDR      r1,|L1.520|
00011e  6048              STR      r0,[r1,#4]
;;;85     	LPC_TIM1->IR   = 0xF;
000120  200f              MOVS     r0,#0xf
000122  6008              STR      r0,[r1,#0]
;;;86     	LPC_TIM1->CTCR = 0;
000124  2000              MOVS     r0,#0
000126  6708              STR      r0,[r1,#0x70]
;;;87     	LPC_TIM1->PR   = 24;
000128  2018              MOVS     r0,#0x18
00012a  60c8              STR      r0,[r1,#0xc]
;;;88     	LPC_TIM1->MR0	 = 80; 	// 0.08ms
00012c  2050              MOVS     r0,#0x50
00012e  6188              STR      r0,[r1,#0x18]
;;;89     	LPC_TIM1->MCR  = 0x3;
000130  2003              MOVS     r0,#3
000132  6148              STR      r0,[r1,#0x14]
;;;90     	NVIC_EnableIRQ( TIMER1_IRQn );
000134  2002              MOVS     r0,#2
000136  f7fffffe          BL       NVIC_EnableIRQ
;;;91     }
00013a  bd10              POP      {r4,pc}
;;;92     
                          ENDP

                  TIMER1_Start PROC
;;;93     void TIMER1_Start( void )
00013c  2001              MOVS     r0,#1
;;;94     {
;;;95     	LPC_TIM1->TCR = 0x01;
00013e  4932              LDR      r1,|L1.520|
000140  6048              STR      r0,[r1,#4]
;;;96     }
000142  4770              BX       lr
;;;97     
                          ENDP

                  TIMER1_Stop PROC
;;;98     void TIMER1_Stop( void )
000144  4830              LDR      r0,|L1.520|
;;;99     {
;;;100    	LPC_TIM1->TCR &= ~0x01;
000146  6840              LDR      r0,[r0,#4]
000148  f0200001          BIC      r0,r0,#1
00014c  492e              LDR      r1,|L1.520|
00014e  6048              STR      r0,[r1,#4]
;;;101    }
000150  4770              BX       lr
;;;102    
                          ENDP

                  TIMER1_IRQHandler PROC
;;;104    
;;;105    void TIMER1_IRQHandler( void )
000152  b500              PUSH     {lr}
;;;106    {
;;;107    	uint32_t ir_reg = LPC_TIM1->IR;
000154  482c              LDR      r0,|L1.520|
000156  6802              LDR      r2,[r0,#0]
;;;108    	LPC_TIM1->IR = ir_reg;
000158  6002              STR      r2,[r0,#0]
;;;109    	TIMER1_Stop();
00015a  f7fffffe          BL       TIMER1_Stop
;;;110    //	RS485_RD();
;;;111    }
00015e  bd00              POP      {pc}
;;;112    
                          ENDP

                  TIMER2_Init PROC
;;;113    void TIMER2_Init( void )
000160  b510              PUSH     {r4,lr}
;;;114    {
;;;115    	LPC_SC->PCONP |= ( 1 << 22 );
000162  4828              LDR      r0,|L1.516|
000164  6800              LDR      r0,[r0,#0]
000166  f4400080          ORR      r0,r0,#0x400000
00016a  4926              LDR      r1,|L1.516|
00016c  39c4              SUBS     r1,r1,#0xc4
00016e  f8c100c4          STR      r0,[r1,#0xc4]
;;;116    	LPC_TIM2->TCR = 0x02;
000172  2002              MOVS     r0,#2
000174  4925              LDR      r1,|L1.524|
000176  6048              STR      r0,[r1,#4]
;;;117    	LPC_TIM2->IR   = 0xF;
000178  200f              MOVS     r0,#0xf
00017a  6008              STR      r0,[r1,#0]
;;;118    	LPC_TIM2->CTCR = 0;
00017c  2000              MOVS     r0,#0
00017e  6708              STR      r0,[r1,#0x70]
;;;119    	LPC_TIM2->PR   = 24;
000180  2018              MOVS     r0,#0x18
000182  60c8              STR      r0,[r1,#0xc]
;;;120    	LPC_TIM2->MR0	 = 300; 	// 0.1ms
000184  f44f7096          MOV      r0,#0x12c
000188  6188              STR      r0,[r1,#0x18]
;;;121    	LPC_TIM2->MCR  = 0x3;
00018a  2003              MOVS     r0,#3
00018c  6148              STR      r0,[r1,#0x14]
;;;122    	NVIC_EnableIRQ( TIMER2_IRQn );
00018e  f7fffffe          BL       NVIC_EnableIRQ
;;;123    }
000192  bd10              POP      {r4,pc}
;;;124    
                          ENDP

                  TIMER2_Start PROC
;;;125    
;;;126    void TIMER2_Start( void )
000194  2001              MOVS     r0,#1
;;;127    {
;;;128    	LPC_TIM2->TCR = 0x01;
000196  491d              LDR      r1,|L1.524|
000198  6048              STR      r0,[r1,#4]
;;;129    }
00019a  4770              BX       lr
;;;130    
                          ENDP

                  TIMER2_Stop PROC
;;;131    void TIMER2_Stop( void )
00019c  481b              LDR      r0,|L1.524|
;;;132    {
;;;133    	LPC_TIM2->TCR &= ~0x01;
00019e  6840              LDR      r0,[r0,#4]
0001a0  f0200001          BIC      r0,r0,#1
0001a4  4919              LDR      r1,|L1.524|
0001a6  6048              STR      r0,[r1,#4]
;;;134    }
0001a8  4770              BX       lr
;;;135    
                          ENDP

                  TIMER2_IRQHandler PROC
;;;136    
;;;137    void TIMER2_IRQHandler( void )
0001aa  b500              PUSH     {lr}
;;;138    {
;;;139    	uint32_t ir_reg = LPC_TIM2->IR;
0001ac  4817              LDR      r0,|L1.524|
0001ae  6802              LDR      r2,[r0,#0]
;;;140    	LPC_TIM2->IR = ir_reg;
0001b0  6002              STR      r2,[r0,#0]
;;;141    	TIMER2_Stop();
0001b2  f7fffffe          BL       TIMER2_Stop
;;;142    	Radar_RS485_RD();
0001b6  4816              LDR      r0,|L1.528|
0001b8  6bc0              LDR      r0,[r0,#0x3c]
0001ba  f0400001          ORR      r0,r0,#1
0001be  4914              LDR      r1,|L1.528|
0001c0  63c8              STR      r0,[r1,#0x3c]
;;;143    }
0001c2  bd00              POP      {pc}
                          ENDP

                  NVIC_EnableIRQ PROC
;;;1095    */
;;;1096   static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
0001c4  f000021f          AND      r2,r0,#0x1f
;;;1097   {
;;;1098     NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
0001c8  2101              MOVS     r1,#1
0001ca  4091              LSLS     r1,r1,r2
0001cc  0942              LSRS     r2,r0,#5
0001ce  0092              LSLS     r2,r2,#2
0001d0  f10222e0          ADD      r2,r2,#0xe000e000
0001d4  f8c21100          STR      r1,[r2,#0x100]
;;;1099   }
0001d8  4770              BX       lr
;;;1100   
                          ENDP

0001da  0000              DCW      0x0000
                  |L1.476|
                          DCD      g_current_tick
                  |L1.480|
                          DCD      idx_7
                  |L1.484|
                          DCD      idx_7_freq
                  |L1.488|
                          DCD      idx_6
                  |L1.492|
                          DCD      idx_6_freq
                  |L1.496|
                          DCD      FOC_1_STATUS
                  |L1.500|
                          DCD      FOC_2_STATUS
                  |L1.504|
                          DCD      idx_7_tick
                  |L1.508|
                          DCD      idx_6_tick
                  |L1.512|
                          DCD      timer0_1ms_timeout_flag
                  |L1.516|
                          DCD      0x400fc0c4
                  |L1.520|
                          DCD      0x40008000
                  |L1.524|
                          DCD      0x40090000
                  |L1.528|
                          DCD      0x2009c000

                          AREA ||.data||, DATA, ALIGN=2

                  timer0_1ms_timeout_flag
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  idx_7_tick
                          DCD      0x00000000
                  idx_6_tick
                          DCD      0x00000000
