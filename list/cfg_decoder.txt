; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\cfg_decoder.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\cfg_decoder.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\cstartup -I.\drivers\uart -I.\app\cfg -I.\iap -I.\drivers -I.\usb -I.\drivers\adc -I.\drivers\gpio -I.\drivers -I.\RTE\_lpc17xx_can_loader_debug -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DLPC175x_6x -D__DEBUG_UART2_PRINTF__ -D__UART0__ -D__UART1__ -D__UART2__ -D__UART3__ -D__UART2_ENABLE__ -D__UART3_ENABLE__ -D__UART0_ENABLE__ -D__UART1_ENABLE__ --omf_browse=.\output\cfg_decoder.crf app\cfg\cfg_decoder.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  cfg_decoder_init PROC
;;;5      
;;;6      void cfg_decoder_init( cfg_decoder_object_t *obj, uint8_t *p, uint16_t max )
000000  2300              MOVS     r3,#0
;;;7      {
;;;8          obj->step = 0;
000002  7003              STRB     r3,[r0,#0]
;;;9          obj->p_data = p;
000004  60c1              STR      r1,[r0,#0xc]
;;;10         obj->max = max;
000006  80c2              STRH     r2,[r0,#6]
;;;11     }
000008  4770              BX       lr
;;;12     
                          ENDP

                  cfg_decoder_upack PROC
;;;13     bool cfg_decoder_upack( cfg_decoder_object_t *obj, uint8_t data )
00000a  b570              PUSH     {r4-r6,lr}
;;;14     {
00000c  4604              MOV      r4,r0
00000e  460d              MOV      r5,r1
;;;15         switch( obj->step ) {
000010  7820              LDRB     r0,[r4,#0]
000012  2805              CMP      r0,#5
000014  d257              BCS      |L1.198|
000016  e8dff000          TBB      [pc,r0]
00001a  030f              DCB      0x03,0x0f
00001c  182f3f00          DCB      0x18,0x2f,0x3f,0x00
;;;16             case 0:
;;;17     			if( data == 0x55 ) {
000020  2d55              CMP      r5,#0x55
000022  d108              BNE      |L1.54|
;;;18     				obj->idx = 0;
000024  2000              MOVS     r0,#0
000026  8060              STRH     r0,[r4,#2]
;;;19     				obj->p_data[obj->idx++] = data;
000028  8861              LDRH     r1,[r4,#2]
00002a  1c48              ADDS     r0,r1,#1
00002c  8060              STRH     r0,[r4,#2]
00002e  68e0              LDR      r0,[r4,#0xc]
000030  5445              STRB     r5,[r0,r1]
;;;20                     obj->step = 1;
000032  2001              MOVS     r0,#1
000034  7020              STRB     r0,[r4,#0]
                  |L1.54|
;;;21     			}
;;;22     			break;
000036  e049              B        |L1.204|
;;;23     		case 1:
;;;24     			obj->len = data;
000038  80a5              STRH     r5,[r4,#4]
;;;25     			obj->p_data[obj->idx++] = data;
00003a  8861              LDRH     r1,[r4,#2]
00003c  1c48              ADDS     r0,r1,#1
00003e  8060              STRH     r0,[r4,#2]
000040  68e0              LDR      r0,[r4,#0xc]
000042  5445              STRB     r5,[r0,r1]
;;;26     			obj->step = 2;
000044  2002              MOVS     r0,#2
000046  7020              STRB     r0,[r4,#0]
;;;27     			break;
000048  e040              B        |L1.204|
;;;28     		case 2:
;;;29     			obj->len |= ( ( data & 0x3 ) << 8 );
00004a  88a0              LDRH     r0,[r4,#4]
00004c  f0050103          AND      r1,r5,#3
000050  ea402001          ORR      r0,r0,r1,LSL #8
000054  80a0              STRH     r0,[r4,#4]
;;;30                 obj->ver = ( data >> 2 );
000056  10a8              ASRS     r0,r5,#2
000058  7220              STRB     r0,[r4,#8]
;;;31     			if( obj->len > obj->max ) {
00005a  88a0              LDRH     r0,[r4,#4]
00005c  88e1              LDRH     r1,[r4,#6]
00005e  4288              CMP      r0,r1
000060  dd02              BLE      |L1.104|
;;;32     				obj->step = 0;
000062  2000              MOVS     r0,#0
000064  7020              STRB     r0,[r4,#0]
000066  e006              B        |L1.118|
                  |L1.104|
;;;33     			} else {
;;;34     				obj->p_data[obj->idx++] = data;
000068  8861              LDRH     r1,[r4,#2]
00006a  1c48              ADDS     r0,r1,#1
00006c  8060              STRH     r0,[r4,#2]
00006e  68e0              LDR      r0,[r4,#0xc]
000070  5445              STRB     r5,[r0,r1]
;;;35     				obj->step = 3;
000072  2003              MOVS     r0,#3
000074  7020              STRB     r0,[r4,#0]
                  |L1.118|
;;;36     			}
;;;37     			break;
000076  e029              B        |L1.204|
;;;38     		case 3:
;;;39     			obj->p_data[obj->idx++] = data;
000078  8861              LDRH     r1,[r4,#2]
00007a  1c48              ADDS     r0,r1,#1
00007c  8060              STRH     r0,[r4,#2]
00007e  68e0              LDR      r0,[r4,#0xc]
000080  5445              STRB     r5,[r0,r1]
;;;40     			if( Verify_CRC8_Check_Sum( obj->p_data, 4 ) ) {
000082  2104              MOVS     r1,#4
000084  68e0              LDR      r0,[r4,#0xc]
000086  f7fffffe          BL       Verify_CRC8_Check_Sum
00008a  b110              CBZ      r0,|L1.146|
;;;41     				obj->step = 4;
00008c  2004              MOVS     r0,#4
00008e  7020              STRB     r0,[r4,#0]
000090  e001              B        |L1.150|
                  |L1.146|
;;;42     			} else {
;;;43     				obj->step = 0;
000092  2000              MOVS     r0,#0
000094  7020              STRB     r0,[r4,#0]
                  |L1.150|
;;;44     			}
;;;45     			break;
000096  e019              B        |L1.204|
;;;46     		case 4:
;;;47                 if( obj->idx < obj->len ) {
000098  8860              LDRH     r0,[r4,#2]
00009a  88a1              LDRH     r1,[r4,#4]
00009c  4288              CMP      r0,r1
00009e  da04              BGE      |L1.170|
;;;48                     obj->p_data[obj->idx++] = data;
0000a0  8861              LDRH     r1,[r4,#2]
0000a2  1c48              ADDS     r0,r1,#1
0000a4  8060              STRH     r0,[r4,#2]
0000a6  68e0              LDR      r0,[r4,#0xc]
0000a8  5445              STRB     r5,[r0,r1]
                  |L1.170|
;;;49                 }
;;;50                 if( obj->idx == obj->len ) {
0000aa  8860              LDRH     r0,[r4,#2]
0000ac  88a1              LDRH     r1,[r4,#4]
0000ae  4288              CMP      r0,r1
0000b0  d108              BNE      |L1.196|
;;;51                     obj->step = 0;
0000b2  2000              MOVS     r0,#0
0000b4  7020              STRB     r0,[r4,#0]
;;;52                     if( Verify_CRC16_Check_Sum( obj->p_data, obj->len ) ) {
0000b6  88a1              LDRH     r1,[r4,#4]
0000b8  68e0              LDR      r0,[r4,#0xc]
0000ba  f7fffffe          BL       Verify_CRC16_Check_Sum
0000be  b108              CBZ      r0,|L1.196|
;;;53     //                    if( obj->ver == 1 ) {
;;;54                             return true ;
0000c0  2001              MOVS     r0,#1
                  |L1.194|
;;;55     //                    }
;;;56                     }
;;;57                 }
;;;58                 break;
;;;59             default:
;;;60                 obj->step = 0;
;;;61         }
;;;62         return false;
;;;63     }
0000c2  bd70              POP      {r4-r6,pc}
                  |L1.196|
0000c4  e002              B        |L1.204|
                  |L1.198|
0000c6  2000              MOVS     r0,#0                 ;60
0000c8  7020              STRB     r0,[r4,#0]            ;60
0000ca  bf00              NOP                            ;15
                  |L1.204|
0000cc  bf00              NOP                            ;22
0000ce  2000              MOVS     r0,#0                 ;62
0000d0  e7f7              B        |L1.194|
;;;64     
                          ENDP

                  get_control_flag PROC
;;;65     uint8_t control_flag = 0;
;;;66     uint8_t get_control_flag(void)
0000d2  4819              LDR      r0,|L1.312|
;;;67     {
;;;68       return control_flag;
0000d4  7800              LDRB     r0,[r0,#0]  ; control_flag
;;;69     }
0000d6  4770              BX       lr
;;;70     
                          ENDP

                  Flow_Sensor_Unpack PROC
;;;71     void  Flow_Sensor_Unpack( cfg_decoder_object_t *obj, uint8_t data )
0000d8  7802              LDRB     r2,[r0,#0]
;;;72     {
;;;73         switch( obj->step ) 
0000da  2a05              CMP      r2,#5
0000dc  d226              BCS      |L1.300|
0000de  e8dff002          TBB      [pc,r2]
0000e2  0308              DCB      0x03,0x08
0000e4  10182000          DCB      0x10,0x18,0x20,0x00
;;;74     		{
;;;75           case 0:
;;;76     			 if( data == 0x55 ) 
0000e8  2955              CMP      r1,#0x55
0000ea  d101              BNE      |L1.240|
;;;77               obj->step = 1;
0000ec  2201              MOVS     r2,#1
0000ee  7002              STRB     r2,[r0,#0]
                  |L1.240|
;;;78     			break;
0000f0  e01f              B        |L1.306|
;;;79     			 
;;;80     		  case 1:
;;;81     				 if( data == 0xaa ) 
0000f2  29aa              CMP      r1,#0xaa
0000f4  d102              BNE      |L1.252|
;;;82               obj->step = 2;
0000f6  2202              MOVS     r2,#2
0000f8  7002              STRB     r2,[r0,#0]
0000fa  e001              B        |L1.256|
                  |L1.252|
;;;83     				 else
;;;84     					 obj->step = 0;
0000fc  2200              MOVS     r2,#0
0000fe  7002              STRB     r2,[r0,#0]
                  |L1.256|
;;;85     			break;
000100  e017              B        |L1.306|
;;;86     				 
;;;87     		  case 2:
;;;88     				 if( data == 0x66) 
000102  2966              CMP      r1,#0x66
000104  d102              BNE      |L1.268|
;;;89               obj->step = 3;
000106  2203              MOVS     r2,#3
000108  7002              STRB     r2,[r0,#0]
00010a  e001              B        |L1.272|
                  |L1.268|
;;;90     				 else
;;;91     					obj->step = 0;
00010c  2200              MOVS     r2,#0
00010e  7002              STRB     r2,[r0,#0]
                  |L1.272|
;;;92     			break;
000110  e00f              B        |L1.306|
;;;93     				 
;;;94     		 case 3:
;;;95     				 if( data == 0xbb) 
000112  29bb              CMP      r1,#0xbb
000114  d102              BNE      |L1.284|
;;;96               obj->step = 4;
000116  2204              MOVS     r2,#4
000118  7002              STRB     r2,[r0,#0]
00011a  e001              B        |L1.288|
                  |L1.284|
;;;97     				 else
;;;98     					obj->step = 0;
00011c  2200              MOVS     r2,#0
00011e  7002              STRB     r2,[r0,#0]
                  |L1.288|
;;;99     		 break;
000120  e007              B        |L1.306|
;;;100    				 
;;;101    		 case 4:
;;;102    			 control_flag  = data;
000122  4a05              LDR      r2,|L1.312|
000124  7011              STRB     r1,[r2,#0]
;;;103           obj->step = 0;
000126  2200              MOVS     r2,#0
000128  7002              STRB     r2,[r0,#0]
;;;104         break;
00012a  e002              B        |L1.306|
                  |L1.300|
;;;105            default:
;;;106                obj->step = 0;
00012c  2200              MOVS     r2,#0
00012e  7002              STRB     r2,[r0,#0]
000130  bf00              NOP                            ;73
                  |L1.306|
000132  bf00              NOP                            ;78
;;;107        }
;;;108     
;;;109    }
000134  4770              BX       lr
;;;110    
                          ENDP

000136  0000              DCW      0x0000
                  |L1.312|
                          DCD      control_flag

                          AREA ||.data||, DATA, ALIGN=0

                  control_flag
000000  00                DCB      0x00
