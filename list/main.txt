; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\main.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\cstartup -I.\drivers\uart -I.\app\cfg -I.\iap -I.\drivers -I.\usb -I.\drivers\adc -I.\drivers\gpio -I.\drivers -I.\RTE\_lpc17xx_can_loader_debug -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DLPC175x_6x -D__DEBUG_UART2_PRINTF__ -D__UART0__ -D__UART1__ -D__UART2__ -D__UART3__ -D__UART2_ENABLE__ -D__UART3_ENABLE__ -D__UART0_ENABLE__ -D__UART1_ENABLE__ --omf_browse=.\output\main.crf app\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Esc_Ver_Check PROC
;;;141    
;;;142    void Esc_Ver_Check(void) 
000000  b510              PUSH     {r4,lr}
;;;143    {	
;;;144    //cmd_handler_foc_ver_request( FOC_1);
;;;145    	cmd_handler_foc_ver_request( FOC_2);
000002  2002              MOVS     r0,#2
000004  f7fffffe          BL       cmd_handler_foc_ver_request
;;;146    }
000008  bd10              POP      {r4,pc}
                          ENDP

                  main PROC
;;;40     extern cmd_foc_ack_t debug_stFOC_Value_1,debug_stFOC_Value_3;//for debug
;;;41     int main( void ) 
00000a  b51c              PUSH     {r2-r4,lr}
;;;42     {
;;;43     	SystemInit();
00000c  f7fffffe          BL       SystemInit
;;;44     	SystemCoreClockUpdate();  
000010  f7fffffe          BL       SystemCoreClockUpdate
;;;45     	UARTS_Init();	
000014  f7fffffe          BL       UARTS_Init
;;;46     	WDT_Init();
000018  f7fffffe          BL       WDT_Init
;;;47       Interrupt_Init( );
00001c  f7fffffe          BL       Interrupt_Init
;;;48     	uart_printf( 0, "UARTS_Init\r\n" );
000020  a15f              ADR      r1,|L1.416|
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       uart_printf
;;;49     #if ( __CAN1_ENABLE__ )
;;;50     	CAN_Init();
000028  f7fffffe          BL       CAN_Init
;;;51     #endif
;;;52     #if __USB_ENABLE__
;;;53     	USB_Init_CDC();
;;;54     #endif
;;;55     	TIMER0_Init(); 
00002c  f7fffffe          BL       TIMER0_Init
;;;56     	TIMER1_Init(); 
000030  f7fffffe          BL       TIMER1_Init
;;;57     	TIMER2_Init(); 
000034  f7fffffe          BL       TIMER2_Init
;;;58     	LedInit();
000038  f7fffffe          BL       LedInit
;;;59     	level_sensor_init();
00003c  f7fffffe          BL       level_sensor_init
;;;60     #if __LPC15xx_Fitting__	
;;;61       User_PWM_Init();
;;;62     	uart_swtich_init();
;;;63     	TX_RX1_ON();
;;;64     #endif
;;;65     	sensor_adc_init();
000040  f7fffffe          BL       sensor_adc_init
;;;66       WDT_Start( 1000 );  
000044  f44f707a          MOV      r0,#0x3e8
000048  f7fffffe          BL       WDT_Start
;;;67     	if( WDT_ResetCheck() ) {
00004c  f7fffffe          BL       WDT_ResetCheck
000050  b118              CBZ      r0,|L1.90|
;;;68     		uart_printf( 0, "wdt reset\r\n" );
000052  a157              ADR      r1,|L1.432|
000054  2000              MOVS     r0,#0
000056  f7fffffe          BL       uart_printf
                  |L1.90|
;;;69     	}
;;;70       uart_printf( 0, "mcu reset\r\n" );
00005a  a158              ADR      r1,|L1.444|
00005c  2000              MOVS     r0,#0
00005e  f7fffffe          BL       uart_printf
;;;71     	TIMER0_Start();
000062  f7fffffe          BL       TIMER0_Start
;;;72       cfg_unpack_init();
000066  f7fffffe          BL       cfg_unpack_init
;;;73     	deviceInfoInit(); 
00006a  f7fffffe          BL       deviceInfoInit
;;;74     	set_foc_throttle_value(FOC_1,FOC_1_STATUS);
00006e  4856              LDR      r0,|L1.456|
000070  8800              LDRH     r0,[r0,#0]  ; FOC_1_STATUS
000072  4601              MOV      r1,r0
000074  9001              STR      r0,[sp,#4]
000076  2001              MOVS     r0,#1
000078  f7fffffe          BL       set_foc_throttle_value
;;;75     	set_foc_throttle_value(FOC_2,FOC_2_STATUS);
00007c  4853              LDR      r0,|L1.460|
00007e  8800              LDRH     r0,[r0,#0]  ; FOC_2_STATUS
000080  4601              MOV      r1,r0
000082  9001              STR      r0,[sp,#4]
000084  2002              MOVS     r0,#2
000086  f7fffffe          BL       set_foc_throttle_value
;;;76     	spray_system_press_para_init_check();// 压力传感器初始化参数验证
00008a  f7fffffe          BL       spray_system_press_para_init_check
;;;77     	spray_sysem_flow_para_init_check();  // 流量传感器初始化参数验证
00008e  f7fffffe          BL       spray_sysem_flow_para_init_check
;;;78     	spray_residual_volume_init_check();  // 无药报警时是否剩余少量药
000092  f7fffffe          BL       spray_residual_volume_init_check
;;;79     	Esc_Ver_Check();
000096  f7fffffe          BL       Esc_Ver_Check
;;;80     	while( 1 ) 
00009a  e080              B        |L1.414|
                  |L1.156|
;;;81     	{
;;;82     		while( !TIMER0_1Ms_Timeout() );
00009c  bf00              NOP      
                  |L1.158|
00009e  f7fffffe          BL       TIMER0_1Ms_Timeout
0000a2  2800              CMP      r0,#0
0000a4  d0fb              BEQ      |L1.158|
;;;83     		clock++;	
0000a6  484a              LDR      r0,|L1.464|
0000a8  6800              LDR      r0,[r0,#0]  ; clock
0000aa  1c40              ADDS     r0,r0,#1
0000ac  4948              LDR      r1,|L1.464|
0000ae  6008              STR      r0,[r1,#0]  ; clock
;;;84     		if(clock % 2 == 0) // 500HZ
0000b0  4608              MOV      r0,r1
0000b2  7800              LDRB     r0,[r0,#0]  ; clock
0000b4  f0000001          AND      r0,r0,#1
0000b8  b938              CBNZ     r0,|L1.202|
;;;85     		{
;;;86     			  temperature_sensor_handle();
0000ba  f7fffffe          BL       temperature_sensor_handle
;;;87     			  press_sensor_handle();	
0000be  f7fffffe          BL       press_sensor_handle
;;;88     				cfg_unpack_tick(); 
0000c2  f7fffffe          BL       cfg_unpack_tick
;;;89     				cfg_unpack_tick_a2();	
0000c6  f7fffffe          BL       cfg_unpack_tick_a2
                  |L1.202|
;;;90     		}
;;;91     		
;;;92         if(clock % 10 == 0) // 100HZ
0000ca  4841              LDR      r0,|L1.464|
0000cc  6800              LDR      r0,[r0,#0]  ; clock
0000ce  210a              MOVS     r1,#0xa
0000d0  fbb0f2f1          UDIV     r2,r0,r1
0000d4  fb010012          MLS      r0,r1,r2,r0
0000d8  b9b0              CBNZ     r0,|L1.264|
;;;93     		{  	
;;;94     			  foc_switch_count++;
0000da  483e              LDR      r0,|L1.468|
0000dc  6800              LDR      r0,[r0,#0]  ; foc_switch_count
0000de  1c40              ADDS     r0,r0,#1
0000e0  493c              LDR      r1,|L1.468|
0000e2  6008              STR      r0,[r1,#0]  ; foc_switch_count
;;;95     			  if(foc_switch_count%2)
0000e4  4608              MOV      r0,r1
0000e6  7800              LDRB     r0,[r0,#0]  ; foc_switch_count
0000e8  f0000001          AND      r0,r0,#1
0000ec  b120              CBZ      r0,|L1.248|
;;;96     				{
;;;97     						cmd_hander_foc_request(CMD_NO_ORDER , FOC_2); //50HZ 
0000ee  2102              MOVS     r1,#2
0000f0  2000              MOVS     r0,#0
0000f2  f7fffffe          BL       cmd_hander_foc_request
0000f6  e003              B        |L1.256|
                  |L1.248|
;;;98     				}
;;;99     				else 
;;;100    				{
;;;101    						cmd_hander_foc_request(CMD_NO_ORDER , FOC_1);
0000f8  2101              MOVS     r1,#1
0000fa  2000              MOVS     r0,#0
0000fc  f7fffffe          BL       cmd_hander_foc_request
                  |L1.256|
;;;102    				}
;;;103    		    WDT_Feed();
000100  f7fffffe          BL       WDT_Feed
;;;104    				remaining_capacity_detection();
000104  f7fffffe          BL       remaining_capacity_detection
                  |L1.264|
;;;105    		}	
;;;106    	  if(clock % 10 == 0) // 20HZ 
000108  4831              LDR      r0,|L1.464|
00010a  6800              LDR      r0,[r0,#0]  ; clock
00010c  210a              MOVS     r1,#0xa
00010e  fbb0f2f1          UDIV     r2,r0,r1
000112  fb010012          MLS      r0,r1,r2,r0
000116  b908              CBNZ     r0,|L1.284|
;;;107    		{
;;;108    	     level_data_process();
000118  f7fffffe          BL       level_data_process
                  |L1.284|
;;;109    		}
;;;110    		
;;;111    		if(clock % 100 == 0) //10HZ 
00011c  482c              LDR      r0,|L1.464|
00011e  6800              LDR      r0,[r0,#0]  ; clock
000120  2164              MOVS     r1,#0x64
000122  fbb0f2f1          UDIV     r2,r0,r1
000126  fb010012          MLS      r0,r1,r2,r0
00012a  b960              CBNZ     r0,|L1.326|
;;;112    		{
;;;113    			  if(get_capacity_flag_1L() == 0)
00012c  f7fffffe          BL       get_capacity_flag_1L
000130  b918              CBNZ     r0,|L1.314|
;;;114    				{			
;;;115    					  pressure1_calibration_process(); //如果校准失败（数据异常）  再次校准
000132  f7fffffe          BL       pressure1_calibration_process
;;;116    						pressure2_calibration_process(); //如果校准失败（数据异常）  再次校准
000136  f7fffffe          BL       pressure2_calibration_process
                  |L1.314|
;;;117    				}	
;;;118    			  flow1_calibration_process();
00013a  f7fffffe          BL       flow1_calibration_process
;;;119    				flow2_calibration_process();
00013e  f7fffffe          BL       flow2_calibration_process
;;;120    				spray_system_para_recoder();
000142  f7fffffe          BL       spray_system_para_recoder
                  |L1.326|
;;;121    		}
;;;122    
;;;123    		if(clock % 200 == 0) //5HZ
000146  4822              LDR      r0,|L1.464|
000148  6800              LDR      r0,[r0,#0]  ; clock
00014a  21c8              MOVS     r1,#0xc8
00014c  fbb0f2f1          UDIV     r2,r0,r1
000150  fb010012          MLS      r0,r1,r2,r0
000154  b908              CBNZ     r0,|L1.346|
;;;124    		{
;;;125    		  spary_sys_status_push();
000156  f7fffffe          BL       spary_sys_status_push
                  |L1.346|
;;;126    		}
;;;127    		
;;;128    		if(clock % 1000 == 0) // 1HZ
00015a  481d              LDR      r0,|L1.464|
00015c  6800              LDR      r0,[r0,#0]  ; clock
00015e  f44f717a          MOV      r1,#0x3e8
000162  fbb0f2f1          UDIV     r2,r0,r1
000166  fb010012          MLS      r0,r1,r2,r0
00016a  b9c0              CBNZ     r0,|L1.414|
;;;129    		{
;;;130    			 capacity_by_flow_sensor();
00016c  f7fffffe          BL       capacity_by_flow_sensor
;;;131    			 //if(start_flag == 0)
;;;132    			 {
;;;133        	     uart_printf( 2, "#####press1_value_min = %d idx_7_freq = %d press0_value_min = %d  current_capacity_total = %d  \r\n", 
000170  4819              LDR      r0,|L1.472|
000172  8800              LDRH     r0,[r0,#0]  ; current_capacity_total
000174  4919              LDR      r1,|L1.476|
000176  8809              LDRH     r1,[r1,#0]  ; press0_value_min
000178  e9cd1000          STRD     r1,r0,[sp,#0]
00017c  4818              LDR      r0,|L1.480|
00017e  8803              LDRH     r3,[r0,#0]  ; flow_sensor_value
000180  4818              LDR      r0,|L1.484|
000182  8802              LDRH     r2,[r0,#0]  ; press1_value_min
000184  4918              LDR      r1,|L1.488|
000186  2002              MOVS     r0,#2
000188  f7fffffe          BL       uart_printf
;;;134    				   press1_value_min,flow_sensor_value,press0_value_min,current_capacity_total);
;;;135    				   uart_printf( 2, "acc_signal  = %d   debug_throttle_value_2 = %d \r\n", debug_stFOC_Value_3.acc_signal, debug_throttle_value_2);	
00018c  4817              LDR      r0,|L1.492|
00018e  f9b0200a          LDRSH    r2,[r0,#0xa]  ; debug_stFOC_Value_3
000192  4817              LDR      r0,|L1.496|
000194  8803              LDRH     r3,[r0,#0]  ; debug_throttle_value_2
000196  a117              ADR      r1,|L1.500|
000198  2002              MOVS     r0,#2
00019a  f7fffffe          BL       uart_printf
                  |L1.414|
00019e  e77d              B        |L1.156|
;;;136    			 }
;;;137    		}
;;;138    	}
;;;139    }
;;;140    
                          ENDP

                  |L1.416|
0001a0  55415254          DCB      "UARTS_Init\r\n",0
0001a4  535f496e
0001a8  69740d0a
0001ac  00      
0001ad  00                DCB      0
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L1.432|
0001b0  77647420          DCB      "wdt reset\r\n",0
0001b4  72657365
0001b8  740d0a00
                  |L1.444|
0001bc  6d637520          DCB      "mcu reset\r\n",0
0001c0  72657365
0001c4  740d0a00
                  |L1.456|
                          DCD      FOC_1_STATUS
                  |L1.460|
                          DCD      FOC_2_STATUS
                  |L1.464|
                          DCD      clock
                  |L1.468|
                          DCD      foc_switch_count
                  |L1.472|
                          DCD      current_capacity_total
                  |L1.476|
                          DCD      press0_value_min
                  |L1.480|
                          DCD      flow_sensor_value
                  |L1.484|
                          DCD      press1_value_min
                  |L1.488|
                          DCD      ||.conststring||
                  |L1.492|
                          DCD      debug_stFOC_Value_3
                  |L1.496|
                          DCD      debug_throttle_value_2
                  |L1.500|
0001f4  6163635f          DCB      "acc_signal  = %d   debug_throttle_value_2 = %d \r\n",0
0001f8  7369676e
0001fc  616c2020
000200  3d202564
000204  20202064
000208  65627567
00020c  5f746872
000210  6f74746c
000214  655f7661
000218  6c75655f
00021c  32203d20
000220  2564200d
000224  0a00    
000226  00                DCB      0
000227  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  23232323          DCB      "#####press1_value_min = %d idx_7_freq = %d press0_value"
000004  23707265
000008  7373315f
00000c  76616c75
000010  655f6d69
000014  6e203d20
000018  25642069
00001c  64785f37
000020  5f667265
000024  71203d20
000028  25642070
00002c  72657373
000030  305f7661
000034  6c7565  
000037  5f6d696e          DCB      "_min = %d  current_capacity_total = %d  \r\n",0
00003b  203d2025
00003f  64202063
000043  75727265
000047  6e745f63
00004b  61706163
00004f  6974795f
000053  746f7461
000057  6c203d20
00005b  25642020
00005f  0d0a00  

                          AREA ||.data||, DATA, ALIGN=2

                  g_device_status
                          DCD      0x00000001
                  g_current_tick
                          DCD      0x00000000
                  g_PWM_SET
                          DCD      0x00000000
                          DCD      0x00000000
                  g_stLoaclBodySpeed
                          %        8
                  clock
                          DCD      0x00000000
                  foc_switch_count
                          DCD      0x00000000
                  liquid_capacity
000020  0000              DCB      0x00,0x00
                  debug_PWM_present
000022  00                DCB      0x00
                  start_flag
000023  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
