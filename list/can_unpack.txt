; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\can_unpack.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\can_unpack.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\cstartup -I.\drivers\uart -I.\app\cfg -I.\iap -I.\drivers -I.\usb -I.\drivers\adc -I.\drivers\gpio -I.\drivers -I.\RTE\_lpc17xx_can_loader_debug -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DLPC175x_6x -D__DEBUG_UART2_PRINTF__ -D__UART0__ -D__UART1__ -D__UART2__ -D__UART3__ -D__UART2_ENABLE__ -D__UART3_ENABLE__ -D__UART0_ENABLE__ -D__UART1_ENABLE__ --omf_browse=.\output\can_unpack.crf can\can_unpack.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  gs_cal_crc PROC
;;;251    
;;;252    int gs_cal_crc(unsigned char *ptr, unsigned char len)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;253    {
000004  b088              SUB      sp,sp,#0x20
000006  4605              MOV      r5,r0
000008  460e              MOV      r6,r1
;;;254    	unsigned short crc;
;;;255    	unsigned char da;
;;;256    	unsigned char calen = len - 4;
00000a  1f30              SUBS     r0,r6,#4
00000c  f0000aff          AND      r10,r0,#0xff
;;;257    	unsigned char * calptr = ptr;
000010  46a8              MOV      r8,r5
;;;258    	unsigned char temp;
;;;259    	unsigned short crc_ta[16]={ /* CRC 余式表 */
000012  2220              MOVS     r2,#0x20
000014  4920              LDR      r1,|L1.152|
000016  4668              MOV      r0,sp
000018  f7fffffe          BL       __aeabi_memcpy4
;;;260    		0x0000,0x1021,0x2042,0x3063,0x4084,0x50a5,0x60c6,0x70e7,
;;;261    		0x8108,0x9129,0xa14a,0xb16b,0xc18c,0xd1ad,0xe1ce,0xf1ef,
;;;262    	};
;;;263    	crc=0;
00001c  2400              MOVS     r4,#0
;;;264    
;;;265    	while(calen--!=0)
00001e  e01b              B        |L1.88|
                  |L1.32|
;;;266    	{
;;;267    		da=(unsigned char)(((crc&0xf000)>>12)&0x000f); /* 暂存 CRC 的高4 位 */
000020  f3c43703          UBFX     r7,r4,#12,#4
;;;268    
;;;269    		//da=((unsigned char)(crc/256))/16;            /* 暂存 CRC 的高四位 */
;;;270    		crc<<=4;                                       /* CRC 右移4 位，相当于取CRC 的低12 位）*/
000024  f64f70ff          MOV      r0,#0xffff
000028  ea001404          AND      r4,r0,r4,LSL #4
;;;271    		temp = *calptr;
00002c  f8989000          LDRB     r9,[r8,#0]
;;;272    		crc^=crc_ta[da^(temp>> 4)&0x0f];               /*为什么右移之后会变成0xf#. */
000030  ea871019          EOR      r0,r7,r9,LSR #4
000034  f83d0010          LDRH     r0,[sp,r0,LSL #1]
000038  4044              EORS     r4,r4,r0
;;;273    		/* CRC 的高4 位和本字节的前半字节相加后查表计算CRC，然后加上上一次 CRC 的余数 */
;;;274    
;;;275    		da=(unsigned char)(((crc&0xf000)>>12)&0x000f); /* 暂存 CRC 的高4 位 */
00003a  0b27              LSRS     r7,r4,#12
;;;276    
;;;277    		//da=((unsigned char)(crc/256))/16;            /* 暂存 CRC 的高4 位 */
;;;278    		crc<<=4;                                       /* CRC 右移4 位， 相当于 CRC 的低12 位） */
00003c  f64f70ff          MOV      r0,#0xffff
000040  ea001404          AND      r4,r0,r4,LSL #4
;;;279    		temp = *calptr;
000044  f8989000          LDRB     r9,[r8,#0]
;;;280    		crc^=crc_ta[da^(temp&0x0f)];                   /* CRC 的高4 位和本字节的后半字节相加后查表计算CRC,然后再加上上一次 CRC 的余数 */
000048  f009000f          AND      r0,r9,#0xf
00004c  4078              EORS     r0,r0,r7
00004e  f83d0010          LDRH     r0,[sp,r0,LSL #1]
000052  4044              EORS     r4,r4,r0
;;;281    		calptr++;
000054  f1080801          ADD      r8,r8,#1
                  |L1.88|
000058  f1ba0000          SUBS     r0,r10,#0             ;265
00005c  f1aa0101          SUB      r1,r10,#1             ;265
000060  f0010aff          AND      r10,r1,#0xff          ;265
000064  d1dc              BNE      |L1.32|
;;;282    	}
;;;283    
;;;284    	temp = (unsigned char)(((crc&0xff00)>>8)&0x00ff);
000066  f3c42907          UBFX     r9,r4,#8,#8
;;;285    	da   = (unsigned char)(crc & 0x00ff);
00006a  b2e7              UXTB     r7,r4
;;;286    //	uart_printf(0,"0x%.2x\r\n",ptr[len-2]);
;;;287    //	uart_printf(0,"0x%.2x\r\n",ptr[len-1]);
;;;288    	if( ptr[len-3] == temp && ptr[len-4] == da &&ptr[len-2]==0xab&&ptr[len-1]==0xcd)
00006c  1ef0              SUBS     r0,r6,#3
00006e  5c28              LDRB     r0,[r5,r0]
000070  4548              CMP      r0,r9
000072  d10f              BNE      |L1.148|
000074  1f30              SUBS     r0,r6,#4
000076  5c28              LDRB     r0,[r5,r0]
000078  42b8              CMP      r0,r7
00007a  d10b              BNE      |L1.148|
00007c  1eb0              SUBS     r0,r6,#2
00007e  5c28              LDRB     r0,[r5,r0]
000080  28ab              CMP      r0,#0xab
000082  d107              BNE      |L1.148|
000084  1e70              SUBS     r0,r6,#1
000086  5c28              LDRB     r0,[r5,r0]
000088  28cd              CMP      r0,#0xcd
00008a  d103              BNE      |L1.148|
;;;289    	{
;;;290    		return 1;
00008c  2001              MOVS     r0,#1
                  |L1.142|
;;;291    	}
;;;292    	else
;;;293    	{
;;;294    		return 0;
;;;295    	}
;;;296    }
00008e  b008              ADD      sp,sp,#0x20
000090  e8bd87f0          POP      {r4-r10,pc}
                  |L1.148|
000094  2000              MOVS     r0,#0                 ;294
000096  e7fa              B        |L1.142|
;;;297    /*******************  (C) COPYRIGHT 2011 DJI ************END OF FILE***********/
                          ENDP

                  |L1.152|
                          DCD      ||.constdata||+0x28

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  led_unpack_buf
                          %        128
                  exBuf
                          %        512

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  CAN_IMU_PACK_HEADER1
000000  55                DCB      0x55
                  CAN_IMU_PACK_HEADER2
000001  aa                DCB      0xaa
                  CAN_IMU_PACK_HEADER3
000002  55                DCB      0x55
                  CAN_IMU_PACK_HEADER4
000003  aa                DCB      0xaa
                  CAN_IMU_PACK_END1
000004  66                DCB      0x66
                  CAN_IMU_PACK_END2
000005  cc                DCB      0xcc
                  CAN_IMU_PACK_END3
000006  66                DCB      0x66
                  CAN_IMU_PACK_END4
000007  cc                DCB      0xcc
                  CAN_IMU_PACK_STATE_HEADER1
000008  00                DCB      0x00
                  CAN_IMU_PACK_STATE_HEADER2
000009  01                DCB      0x01
                  CAN_IMU_PACK_STATE_HEADER3
00000a  02                DCB      0x02
                  CAN_IMU_PACK_STATE_HEADER4
00000b  03                DCB      0x03
                  CAN_IMU_PACK_STATE_CMD_L
00000c  04                DCB      0x04
                  CAN_IMU_PACK_STATE_CMD_H
00000d  05                DCB      0x05
                  CAN_IMU_PACK_STATE_LEN_L
00000e  06                DCB      0x06
                  CAN_IMU_PACK_STATE_LEN_H
00000f  07                DCB      0x07
                  CAN_IMU_PACK_STATE_DATA
000010  08                DCB      0x08
                  CAN_IMU_PACK_STATE_END1
000011  09                DCB      0x09
                  CAN_IMU_PACK_STATE_END2
000012  0a                DCB      0x0a
                  CAN_IMU_PACK_STATE_END3
000013  0b                DCB      0x0b
                  CAN_IMU_PACK_STATE_END4
000014  0c00              DCB      0x0c,0x00
                  LED_UNPACK_BUF_MAX_LEN
000016  0080              DCW      0x0080
                  request_cmd
000018  55aa55aa          DCB      0x55,0xaa,0x55,0xaa
00001c  09010400          DCB      0x09,0x01,0x04,0x00
000020  01020304          DCB      0x01,0x02,0x03,0x04
000024  66cc66cc          DCB      0x66,0xcc,0x66,0xcc
000028  00001021          DCW      0x0000,0x1021
00002c  20423063          DCW      0x2042,0x3063
000030  408450a5          DCW      0x4084,0x50a5
000034  60c670e7          DCW      0x60c6,0x70e7
000038  81089129          DCW      0x8108,0x9129
00003c  a14ab16b          DCW      0xa14a,0xb16b
000040  c18cd1ad          DCW      0xc18c,0xd1ad
000044  e1cef1ef          DCW      0xe1ce,0xf1ef
